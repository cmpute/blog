<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Volunteer Computing | JacobZ</title><link>https://zyxin.xyz/blog/en/tags/volunteer-computing/</link><description>Blog of JacobZ</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cmpute@foxmail.com (Jacob Zhong)</managingEditor><webMaster>cmpute@foxmail.com (Jacob Zhong)</webMaster><lastBuildDate>Wed, 22 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://zyxin.xyz/blog/en/tags/volunteer-computing/index.xml" rel="self" type="application/rss+xml"/><item><title>Brief Tutorial for Mersenne Prime Test Softwares</title><link>https://zyxin.xyz/blog/en/2023-02/mersenne-test-softwares/</link><pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate><author>cmpute@foxmail.com (Jacob Zhong)</author><guid>https://zyxin.xyz/blog/en/2023-02/mersenne-test-softwares/</guid><description>&lt;p>After playing with linux OSes recently, I also tried to figure out other ways to contribute to GIMPS. In this blog, I will summarize the softwares recommended for the GIMPS project and their usage. GIMPS relies on the PrimeNet for tasks distribution and collection. Currently there are three kinds of tasks for searching new Mersenne primes will be distributed: &lt;ruby>Trial&lt;rt>T&lt;/rt>&amp;nbsp;Factoring&lt;rt>F&lt;/rt>&lt;/ruby>、&lt;ruby>P-1&lt;rt>PM1&lt;/rt>&lt;/ruby> factorization and &lt;ruby>Probable&amp;nbsp;Prime&lt;rt>PRP&lt;/rt>&lt;/ruby> test。Therefore, I will mainly cover the usage and recommended strategy in this blog.&lt;/p>
&lt;hr/>&lt;em>Go to &lt;a href="https://zyxin.xyz/blog/en/2023-02/mersenne-test-softwares/">webpage&lt;/a> to read full text.&lt;/em></description></item></channel></rss>