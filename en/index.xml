<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>JacobZ</title><link>https://zyxin.xyz/blog/en/</link><description>Blog of JacobZ</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>cmpute@foxmail.com (Jacob Zhong)</managingEditor><webMaster>cmpute@foxmail.com (Jacob Zhong)</webMaster><lastBuildDate>Thu, 12 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://zyxin.xyz/blog/en/index.xml" rel="self" type="application/rss+xml"/><item><title>The Pitfall Of Long Double</title><link>https://zyxin.xyz/blog/en/2022-07/the-pitfall-of-long-double/</link><pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate><author>cmpute@foxmail.com (Jacob Zhong)</author><guid>https://zyxin.xyz/blog/en/2022-07/the-pitfall-of-long-double/</guid><description>&lt;div class="article-notice active-class note">
&lt;div class="article-notice-title">
&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-pencil" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
&lt;path stroke="none" d="M0 0h24v24H0z" fill="none"/>
&lt;path d="M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4" />
&lt;line x1="13.5" y1="6.5" x2="17.5" y2="10.5" />
&lt;/svg>
&lt;span>Preface&lt;/span>
&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-right" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
&lt;path stroke="none" d="M0 0h24v24H0z" fill="none"/>
&lt;polyline points="9 6 15 12 9 18" />
&lt;/svg>
&lt;/div>
&lt;div class="article-notice-body" >
&lt;section>
&lt;p>This article is a repost, originally written by David on the Prelert&amp;rsquo;s website. The original article is now only &lt;a class="link" href="https://web.archive.org/web/20170422155137/http://info.prelert.com/blog/author/david" target="_blank" rel="noopener"
>accessible on WebArchive&lt;/a>.&lt;/p>
&lt;p>I found this article when I&amp;rsquo;m searching for the reason why Rust doesn&amp;rsquo;t have a corresponding type for &lt;code>long double&lt;/code> in C/C++, which have caused some interoperability issues (see &lt;a class="link" href="https://immunant.com/blog/2019/11/rust2020/#:~:text=long%20doubletypes%20in%20C%20are%20specified%20as%20being,with%20C%20code%2C%20Rust%20needs%20to%20support%20long" target="_blank" rel="noopener"
>here&lt;/a> and &lt;a class="link" href="https://github.com/rust-lang/rust-bindgen/issues/1549" target="_blank" rel="noopener"
>here&lt;/a>). On the contrary, the languages Zig and the newly born Carbon both support &lt;code>f16&lt;/code> and &lt;code>f128&lt;/code> types (Zig also supports &lt;code>f80&lt;/code> and Carbon also supports &lt;code>bfloat16&lt;/code>). But that&amp;rsquo;s not suprising because they all aim to provide max interoperability with C/C++. This article might explain some of the reason why Rust doesn&amp;rsquo;t support float types with higher precision.&lt;/p>
&lt;/section>
&lt;/div>
&lt;/div>
&lt;hr/>&lt;em>Go to &amp;lt;a href=&amp;#34;https://zyxin.xyz/blog/en/2022-07/the-pitfall-of-long-double/&amp;#34;&amp;gt;webpage&amp;lt;/a&amp;gt; to read full text.&lt;/em></description></item><item><title>The Pitfall Of VLA in C</title><link>https://zyxin.xyz/blog/en/2022-07/the-pitfall-of-vla/</link><pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate><author>cmpute@foxmail.com (Jacob Zhong)</author><guid>https://zyxin.xyz/blog/en/2022-07/the-pitfall-of-vla/</guid><description>&lt;div class="article-notice active-class note">
&lt;div class="article-notice-title">
&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-pencil" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
&lt;path stroke="none" d="M0 0h24v24H0z" fill="none"/>
&lt;path d="M4 20h4l10.5 -10.5a1.5 1.5 0 0 0 -4 -4l-10.5 10.5v4" />
&lt;line x1="13.5" y1="6.5" x2="17.5" y2="10.5" />
&lt;/svg>
&lt;span>Preface&lt;/span>
&lt;svg xmlns="http://www.w3.org/2000/svg" class="icon icon-tabler icon-tabler-chevron-right" width="44" height="44" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round">
&lt;path stroke="none" d="M0 0h24v24H0z" fill="none"/>
&lt;polyline points="9 6 15 12 9 18" />
&lt;/svg>
&lt;/div>
&lt;div class="article-notice-body" >
&lt;section>
This article is a repost, originally &lt;a class="link" href="https://blog.joren.ga/vla-pitfalls" target="_blank" rel="noopener"
>written by Jorengarenar&lt;/a>. I found this article when I found that Rust doesn&amp;rsquo;t support dynamically stack allocation, and list this article in my blog for translation. If you want to read the Chinese version, please select the Chinese language at the bottom of this page.
&lt;/section>
&lt;/div>
&lt;/div>
&lt;hr/>&lt;em>Go to &amp;lt;a href=&amp;#34;https://zyxin.xyz/blog/en/2022-07/the-pitfall-of-vla/&amp;#34;&amp;gt;webpage&amp;lt;/a&amp;gt; to read full text.&lt;/em></description></item><item><title>Select Modern Programming Languages by One-line comments</title><link>https://zyxin.xyz/blog/en/2021-08/one-line-per-program-lang/</link><pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate><author>cmpute@foxmail.com (Jacob Zhong)</author><guid>https://zyxin.xyz/blog/en/2021-08/one-line-per-program-lang/</guid><description>&lt;p>In recent years, Many novel programming languages have emergerd, and new concepts continued to appear. I always wanted to learn about various new programming languages, and it would be nice to master one more language if it is prospective. Therefore, this article summarizes my understanding of some popular modern languages and their various characteristics. If you are also interested in trying a new language, then I hope this article can help you~&lt;/p>
&lt;hr/>&lt;em>Go to &amp;lt;a href=&amp;#34;https://zyxin.xyz/blog/en/2021-08/one-line-per-program-lang/&amp;#34;&amp;gt;webpage&amp;lt;/a&amp;gt; to read full text.&lt;/em></description></item><item><title>Notes for Algebra Basics</title><link>https://zyxin.xyz/blog/en/2020-06/algebra-basics-notes/</link><pubDate>Sat, 27 Jun 2020 00:00:00 +0000</pubDate><author>cmpute@foxmail.com (Jacob Zhong)</author><guid>https://zyxin.xyz/blog/en/2020-06/algebra-basics-notes/</guid><description>In this note, $\{x_i\}^b_a$ denotes set $\{x_a, x_{a+1}, \ldots, x_b\}$ TODO: add Jordan Form Algebraic Structures Operation Definition: an (binary, closed) operation $\ast$ on a set $S$ is a mapping of $S\times S\to S$ Commutative: $x\ast y=y\ast x,\;\forall x,y\in S$ Associative: $(x\ast y)\ast z=x\ast (y\ast z),\;\forall x,y,z\in S$ Group Definition: a group is a pair $(\mathcal{S},\ast)$ with following axioms $\ast$ is associative on $\mathcal{S}$ (Identity element) $\exists e\in \mathcal{S}\text{ s.
&lt;hr/>&lt;em>Go to &amp;lt;a href=&amp;#34;https://zyxin.xyz/blog/en/2020-06/algebra-basics-notes/&amp;#34;&amp;gt;webpage&amp;lt;/a&amp;gt; to read full text.&lt;/em></description></item><item><title>Notes for Control System</title><link>https://zyxin.xyz/blog/en/2020-06/control-system-notes/</link><pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate><author>cmpute@foxmail.com (Jacob Zhong)</author><guid>https://zyxin.xyz/blog/en/2020-06/control-system-notes/</guid><description>In this note, $f\in\mathbb{F}^\mathbb{G}$ stands for a function with domain in $\mathbb{G}$ and co-domain in $\mathbb{F}$, i.e. $f:\mathbb{F}\to\mathbb{G}$, $H(x)$ generally stands for Heaviside function (step function) Please read the Algebra Basics notes first if you are not familiar with related concepts. Transforms Laplace Transform Definition: $F(s)=\mathcal{L}\{f(t)\}(s)=\int^\infty_0 f(t)e^{-st}\mathrm{d}t$ Note that the transform is not well defined for all functions in $\mathbb{C}^\mathbb{R}$. And the transform is only valid for $s$ in a region of convergence, which is usually separated by 0.
&lt;hr/>&lt;em>Go to &amp;lt;a href=&amp;#34;https://zyxin.xyz/blog/en/2020-06/control-system-notes/&amp;#34;&amp;gt;webpage&amp;lt;/a&amp;gt; to read full text.&lt;/em></description></item><item><title>Matrix Algebra</title><link>https://zyxin.xyz/blog/en/2019-06/matrix-algebra/</link><pubDate>Thu, 06 Jun 2019 00:00:00 +0000</pubDate><author>cmpute@foxmail.com (Jacob Zhong)</author><guid>https://zyxin.xyz/blog/en/2019-06/matrix-algebra/</guid><description>I encountered a lot of calculation of derivates and integration on matrices when I was learning linear systems and SLAM, but I haven&amp;rsquo;t learned much knowledge about them. Recently I know about the book Matrix Cookbook, which thoroughly discussed the arithmetics of matrices. Therefore, I post it here for future references.
Contents 基础内容 求导 逆 复矩阵 求解与分解 统计与概率 多元概率分布 高斯 特殊矩阵 函数与运算符 Source The book can be downloaded from a website from Technical University of Denmark.
&lt;hr/>&lt;em>Go to &amp;lt;a href=&amp;#34;https://zyxin.xyz/blog/en/2019-06/matrix-algebra/&amp;#34;&amp;gt;webpage&amp;lt;/a&amp;gt; to read full text.&lt;/em></description></item><item><title>Notes for Stochastic System</title><link>https://zyxin.xyz/blog/en/2019-03/stochastic-system-notes/</link><pubDate>Tue, 26 Mar 2019 00:00:00 +0000</pubDate><author>cmpute@foxmail.com (Jacob Zhong)</author><guid>https://zyxin.xyz/blog/en/2019-03/stochastic-system-notes/</guid><description>Prerequisites: Knowledge of Elementary Calculus, Linear Algebra and Probability
Discrete-Time Stochastic System Stochastic Sequences Definition: Given $k\in\mathbb{K}\subseteq\mathbb{Z}$ a sequence of integers, $\mathcal{X}(k,\omega): (\Omega,\mathcal{F},\mathbb{P})\to(\mathbb{R}^n,\mathcal{F}_ \mathcal{X},\mathbb{P}_ \mathcal{X})$ is a random/stochastic sequence. Uncertainties: Consider a casual system $F$ relates some scalar inputs $u(k)$ to output $x(k)$ Epistemic/Model uncertainty: $\mathcal{X}(k,\omega)=F(k,u(k),u(k-1),\ldots,\omega)$. (system is stochastic and input is deterministic). Aleatoric/Input uncertainty: $\mathcal{X}(k,\omega)=f(k,U(k,\omega),u(k-1,\omega),\ldots)$ (system is deterministic and input is stochastic). Realization: An outcome $\mathcal{X}(k,\omega)=x(k)$ given $\omega$ is called a realization of stochastic sequence $\mathcal{X}$ Terminology and Convention $\mathcal{X}(k,\omega)$ is often written as $\mathcal{X}(k)$ when there&amp;rsquo;s no ambiguity.
&lt;hr/>&lt;em>Go to &amp;lt;a href=&amp;#34;https://zyxin.xyz/blog/en/2019-03/stochastic-system-notes/&amp;#34;&amp;gt;webpage&amp;lt;/a&amp;gt; to read full text.&lt;/em></description></item><item><title>Notes for Probability Theory (Basics)</title><link>https://zyxin.xyz/blog/en/2019-02/probability-notes/</link><pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate><author>cmpute@foxmail.com (Jacob Zhong)</author><guid>https://zyxin.xyz/blog/en/2019-02/probability-notes/</guid><description>Probability Space Notation: $(\Omega,\mathcal{F},\mathbb{P})$ $\Omega$: Sample space $\mathcal{F}$: Event space. Required to be σ-algebra. We often use Borel σ-algebra for continuous $\Omega$). Axioms for σ-algebra $\mathcal{F}$ is non-empty $A\in\mathcal{F} \Rightarrow A^C\in\mathcal{F}$ (closed under complement) $A_i \in\mathcal{F} \Rightarrow \bigcup^\infty_{k=1} A_k \in \mathcal{F}$ (closed under countable union) For continuous case considering interval $\Omega=[a,b]$, $\mathcal{F}_0$ is the set of all subintervals of $\Omega$. Then its Borel σ-algebra is the smallest σ-algebra that contains $\mathcal{F}_0$.
&lt;hr/>&lt;em>Go to &amp;lt;a href=&amp;#34;https://zyxin.xyz/blog/en/2019-02/probability-notes/&amp;#34;&amp;gt;webpage&amp;lt;/a&amp;gt; to read full text.&lt;/em></description></item><item><title>Archives</title><link>https://zyxin.xyz/blog/en/archives/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>cmpute@foxmail.com (Jacob Zhong)</author><guid>https://zyxin.xyz/blog/en/archives/</guid><description>
&lt;hr/>&lt;em>Go to &amp;lt;a href=&amp;#34;https://zyxin.xyz/blog/en/archives/&amp;#34;&amp;gt;webpage&amp;lt;/a&amp;gt; to read full text.&lt;/em></description></item><item><title>Search</title><link>https://zyxin.xyz/blog/en/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><author>cmpute@foxmail.com (Jacob Zhong)</author><guid>https://zyxin.xyz/blog/en/search/</guid><description>
&lt;hr/>&lt;em>Go to &amp;lt;a href=&amp;#34;https://zyxin.xyz/blog/en/search/&amp;#34;&amp;gt;webpage&amp;lt;/a&amp;gt; to read full text.&lt;/em></description></item></channel></rss>